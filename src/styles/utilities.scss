@use 'sass:map';
@use 'variables' as vars;

// Display utilities
.d-none { display: none !important; }
.d-block { display: block !important; }
.d-inline { display: inline !important; }
.d-inline-block { display: inline-block !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }
.d-grid { display: grid !important; }

// Flexbox utilities
.flex-row { flex-direction: row !important; }
.flex-column { flex-direction: column !important; }
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }

.justify-start { justify-content: flex-start !important; }
.justify-end { justify-content: flex-end !important; }
.justify-center { justify-content: center !important; }
.justify-between { justify-content: space-between !important; }
.justify-around { justify-content: space-around !important; }
.justify-evenly { justify-content: space-evenly !important; }

.align-start { align-items: flex-start !important; }
.align-end { align-items: flex-end !important; }
.align-center { align-items: center !important; }
.align-baseline { align-items: baseline !important; }
.align-stretch { align-items: stretch !important; }

.flex-1 { flex: 1 !important; }
.flex-auto { flex: auto !important; }
.flex-none { flex: none !important; }

// Text alignment
.text-left { text-align: left !important; }
.text-center { text-align: center !important; }
.text-right { text-align: right !important; }
.text-justify { text-align: justify !important; }

// Font weights
.font-light { font-weight: map.get(vars.$font-weights, light) !important; }
.font-normal { font-weight: map.get(vars.$font-weights, normal) !important; }
.font-medium { font-weight: map.get(vars.$font-weights, medium) !important; }
.font-semibold { font-weight: map.get(vars.$font-weights, semibold) !important; }
.font-bold { font-weight: map.get(vars.$font-weights, bold) !important; }

// Text utilities
.text-truncate {
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
}

.text-uppercase { text-transform: uppercase !important; }
.text-lowercase { text-transform: lowercase !important; }
.text-capitalize { text-transform: capitalize !important; }

// Spacing utilities - Margin
@each $key, $value in vars.$spacing {
  .m-#{$key} { margin: $value !important; }
  .mt-#{$key} { margin-top: $value !important; }
  .mr-#{$key} { margin-right: $value !important; }
  .mb-#{$key} { margin-bottom: $value !important; }
  .ml-#{$key} { margin-left: $value !important; }
  .mx-#{$key} { 
    margin-left: $value !important; 
    margin-right: $value !important; 
  }
  .my-#{$key} { 
    margin-top: $value !important; 
    margin-bottom: $value !important; 
  }
}

// Spacing utilities - Padding
@each $key, $value in vars.$spacing {
  .p-#{$key} { padding: $value !important; }
  .pt-#{$key} { padding-top: $value !important; }
  .pr-#{$key} { padding-right: $value !important; }
  .pb-#{$key} { padding-bottom: $value !important; }
  .pl-#{$key} { padding-left: $value !important; }
  .px-#{$key} { 
    padding-left: $value !important; 
    padding-right: $value !important; 
  }
  .py-#{$key} { 
    padding-top: $value !important; 
    padding-bottom: $value !important; 
  }
}

// Gap utilities
@each $key, $value in vars.$spacing {
  .gap-#{$key} { gap: $value !important; }
  .row-gap-#{$key} { row-gap: $value !important; }
  .column-gap-#{$key} { column-gap: $value !important; }
}

// Width utilities
.w-100 { width: 100% !important; }
.w-auto { width: auto !important; }
.w-50 { width: 50% !important; }
.w-75 { width: 75% !important; }
.w-25 { width: 25% !important; }

// Height utilities
.h-100 { height: 100% !important; }
.h-auto { height: auto !important; }
.h-50 { height: 50% !important; }
.h-75 { height: 75% !important; }
.h-25 { height: 25% !important; }

// Position utilities
.position-relative { position: relative !important; }
.position-absolute { position: absolute !important; }
.position-fixed { position: fixed !important; }
.position-sticky { position: sticky !important; }

// Overflow utilities
.overflow-auto { overflow: auto !important; }
.overflow-hidden { overflow: hidden !important; }
.overflow-visible { overflow: visible !important; }
.overflow-scroll { overflow: scroll !important; }

// Cursor utilities
.cursor-pointer { cursor: pointer !important; }
.cursor-default { cursor: default !important; }
.cursor-not-allowed { cursor: not-allowed !important; }

// Border radius utilities
@each $key, $value in vars.$border-radius {
  .rounded-#{$key} { border-radius: $value !important; }
}

// Shadow utilities
@each $key, $value in vars.$shadows {
  .shadow-#{$key} { box-shadow: $value !important; }
}

// Visibility utilities
.visible { visibility: visible !important; }
.invisible { visibility: hidden !important; }

// Opacity utilities
.opacity-0 { opacity: 0 !important; }
.opacity-25 { opacity: 0.25 !important; }
.opacity-50 { opacity: 0.5 !important; }
.opacity-75 { opacity: 0.75 !important; }
.opacity-100 { opacity: 1 !important; }

// Responsive utilities - Mobile First approach
// Breakpoint-specific display utilities
@each $breakpoint, $size in vars.$breakpoints {
  @media (min-width: $size) {
    .d-#{$breakpoint}-none { display: none !important; }
    .d-#{$breakpoint}-block { display: block !important; }
    .d-#{$breakpoint}-inline { display: inline !important; }
    .d-#{$breakpoint}-inline-block { display: inline-block !important; }
    .d-#{$breakpoint}-flex { display: flex !important; }
    .d-#{$breakpoint}-inline-flex { display: inline-flex !important; }
    .d-#{$breakpoint}-grid { display: grid !important; }
    
    .flex-#{$breakpoint}-row { flex-direction: row !important; }
    .flex-#{$breakpoint}-column { flex-direction: column !important; }
    
    .justify-#{$breakpoint}-start { justify-content: flex-start !important; }
    .justify-#{$breakpoint}-end { justify-content: flex-end !important; }
    .justify-#{$breakpoint}-center { justify-content: center !important; }
    .justify-#{$breakpoint}-between { justify-content: space-between !important; }
    
    .align-#{$breakpoint}-start { align-items: flex-start !important; }
    .align-#{$breakpoint}-end { align-items: flex-end !important; }
    .align-#{$breakpoint}-center { align-items: center !important; }
    
    .text-#{$breakpoint}-left { text-align: left !important; }
    .text-#{$breakpoint}-center { text-align: center !important; }
    .text-#{$breakpoint}-right { text-align: right !important; }
  }
}

// Responsive spacing utilities
@each $breakpoint, $size in vars.$breakpoints {
  @media (min-width: $size) {
    @each $key, $value in vars.$spacing {
      .m-#{$breakpoint}-#{$key} { margin: $value !important; }
      .mt-#{$breakpoint}-#{$key} { margin-top: $value !important; }
      .mb-#{$breakpoint}-#{$key} { margin-bottom: $value !important; }
      .ml-#{$breakpoint}-#{$key} { margin-left: $value !important; }
      .mr-#{$breakpoint}-#{$key} { margin-right: $value !important; }
      .mx-#{$breakpoint}-#{$key} { 
        margin-left: $value !important; 
        margin-right: $value !important; 
      }
      .my-#{$breakpoint}-#{$key} { 
        margin-top: $value !important; 
        margin-bottom: $value !important; 
      }
      
      .p-#{$breakpoint}-#{$key} { padding: $value !important; }
      .pt-#{$breakpoint}-#{$key} { padding-top: $value !important; }
      .pb-#{$breakpoint}-#{$key} { padding-bottom: $value !important; }
      .pl-#{$breakpoint}-#{$key} { padding-left: $value !important; }
      .pr-#{$breakpoint}-#{$key} { padding-right: $value !important; }
      .px-#{$breakpoint}-#{$key} { 
        padding-left: $value !important; 
        padding-right: $value !important; 
      }
      .py-#{$breakpoint}-#{$key} { 
        padding-top: $value !important; 
        padding-bottom: $value !important; 
      }
    }
  }
}
